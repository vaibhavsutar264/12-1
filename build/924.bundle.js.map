{"version":3,"file":"924.bundle.js","mappings":"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","sources":["webpack://tclcpasstwentyfirstoct/./src/components/common/icons/pdf.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/ticket.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/export.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/DateSelect.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/Actions.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/overdue.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/paidInvoice.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/unpaidInvoice.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/download.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/DownloadCdr.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/loader-and-snackbar/CDRError.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/loader-and-snackbar/CDRDownloading.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/loader-and-snackbar/CDRDownloaded.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/DataTables.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/invoice.tsx","webpack://tclcpasstwentyfirstoct/./src/components/billing/Billing.tsx"],"sourcesContent":["import { typeVar } from '../../../utils/constants'\n\nconst Pdf = () => {\n  return (\n    <svg\n      id=\"Group_169122\"\n      data-name=\"Group 169122\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      type={typeVar.IMAGE_SVG}\n      width=\"21\"\n      height=\"21.803\"\n      viewBox=\"0 0 21 21.803\"\n    >\n      <defs>\n        <clipPath id=\"clipPath\">\n          <rect\n            id=\"Rectangle_149222\"\n            data-name=\"Rectangle 149222\"\n            width=\"21\"\n            height=\"21.803\"\n            fill=\"#344857\"\n          />\n        </clipPath>\n      </defs>\n      <g id=\"Group_169121\" data-name=\"Group 169121\" clipPath=\"url(#clipPath)\">\n        <path\n          id=\"Path_13839\"\n          data-name=\"Path 13839\"\n          d=\"M16.959,21.8H4.039a.456.456,0,0,0-.077-.033A1.907,1.907,0,0,1,2.382,19.8c0-.539,0-1.078,0-1.617,0-.161.069-.368-.031-.471s-.308-.03-.469-.034A1.906,1.906,0,0,1,.006,15.8C0,13.214,0,10.632,0,8.05A1.782,1.782,0,0,1,.362,6.978a1.942,1.942,0,0,1,1.732-.805c.287.009.288,0,.288-.271,0-1.319,0-2.639,0-3.958A1.9,1.9,0,0,1,3.2.344,2.487,2.487,0,0,1,4.039,0h9.1a.513.513,0,0,0,.1.035,3.178,3.178,0,0,1,1.9,1Q16.438,2.417,17.746,3.8a3.212,3.212,0,0,1,.863,1.923c.015.146-.061.35.045.423s.3.026.454.029a1.9,1.9,0,0,1,1.884,1.889q.014,3.864,0,7.728a1.831,1.831,0,0,1-.979,1.636,2.079,2.079,0,0,1-1.21.241c-.15-.009-.19.038-.188.187.008.688.01,1.377,0,2.065a1.9,1.9,0,0,1-1.27,1.768c-.125.045-.256.076-.384.113M10.5,16.395h8.433c.555,0,.787-.232.787-.786q0-3.682,0-7.364c0-.56-.229-.792-.781-.792H2.053c-.541,0-.776.235-.776.775q0,3.693,0,7.385c0,.552.232.782.791.782H10.5M10.5,6.175q3.325,0,6.65,0c.157,0,.206-.035.2-.2a2,2,0,0,0-.561-1.341Q15.5,3.281,14.213,1.919A1.99,1.99,0,0,0,12.7,1.276q-4.154.005-8.308,0a.653.653,0,0,0-.732.735c0,1.313,0,2.626-.006,3.938,0,.2.057.228.236.228q3.3-.009,6.608,0m0,11.5c-2.209,0-4.418,0-6.627,0-.178,0-.223.046-.22.222.011.638,0,1.277,0,1.915a.65.65,0,0,0,.725.72H16.616a.651.651,0,0,0,.725-.72c0-.638-.006-1.277,0-1.915,0-.177-.043-.222-.22-.221-2.209.007-4.418,0-6.627,0\"\n          transform=\"translate(0)\"\n          fill=\"#344857\"\n        />\n        <path\n          id=\"Path_13840\"\n          data-name=\"Path 13840\"\n          d=\"M149.731,159.686q0-1.106,0-2.212c0-.525.239-.761.769-.761.4,0,.807-.006,1.21,0a2.245,2.245,0,0,1,2.159,1.35,3.51,3.51,0,0,1-.285,3.687,2.165,2.165,0,0,1-1.757.93c-.459.017-.92.022-1.379.02a.649.649,0,0,1-.71-.717c0-.766,0-1.531,0-2.3Zm1.276.005h0c0,.362,0,.723,0,1.085,0,.2-.086.471.033.6s.4.032.611.037a1.1,1.1,0,0,0,1.1-.717,2.489,2.489,0,0,0,.062-1.866,1.123,1.123,0,0,0-1.186-.836,3.978,3.978,0,0,1-.4,0c-.171-.018-.231.03-.226.215.014.5,0,.992,0,1.489\"\n          transform=\"translate(-141.229 -147.812)\"\n          fill=\"#344857\"\n        />\n        <path\n          id=\"Path_13841\"\n          data-name=\"Path 13841\"\n          d=\"M55.361,156.739a4.478,4.478,0,0,1,1.113.078,2,2,0,0,1-.445,3.93c-.219.009-.439.012-.658.007-.121,0-.158.042-.157.161.006.418,0,.837,0,1.255a.639.639,0,0,1-.636.7.651.651,0,0,1-.638-.7q-.006-2.362-.006-4.724a.643.643,0,0,1,.7-.7c.226,0,.453,0,.727,0m-.15,2h0c0,.2,0,.4,0,.6,0,.111.037.151.147.147.2-.007.4,0,.594-.008a.74.74,0,0,0,.724-.718.748.748,0,0,0-.732-.735c-.2-.007-.4,0-.594,0-.117-.005-.144.042-.14.149.007.191,0,.383,0,.574\"\n          transform=\"translate(-50.874 -147.839)\"\n          fill=\"#344857\"\n        />\n        <path\n          id=\"Path_13842\"\n          data-name=\"Path 13842\"\n          d=\"M257.519,158.965q0-1.16,0-2.319a.643.643,0,0,1,.7-.716q.913,0,1.826,0a.643.643,0,0,1,.694.641.652.652,0,0,1-.686.634c-.361,0-.722.006-1.083,0-.129,0-.192.02-.184.171.013.255.011.511,0,.766-.005.135.059.147.166.146.326,0,.651-.007.977,0a.64.64,0,0,1,.422,1.128.64.64,0,0,1-.432.147c-.319,0-.637.006-.956,0-.139,0-.18.04-.178.18.008.525,0,1.05,0,1.574a.641.641,0,1,1-1.274-.01q0-1.17,0-2.34\"\n          transform=\"translate(-242.897 -147.076)\"\n          fill=\"#344857\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default Pdf\n","import { typeVar } from '../../../utils/constants'\n\nconst Ticket = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      type={typeVar.IMAGE_SVG}\n      width=\"20.2\"\n      height=\"22.167\"\n      viewBox=\"0 0 20.2 22.167\"\n    >\n      <g\n        id=\"_01_align_center\"\n        data-name=\"01 align center\"\n        transform=\"matrix(0.891, 0.454, -0.454, 0.891, 5.499, -1.362)\"\n      >\n        <path\n          id=\"Path_13687\"\n          data-name=\"Path 13687\"\n          d=\"M14.25,0h-3V.75a1.5,1.5,0,1,1-3,0V0h-3A2.25,2.25,0,0,0,3,2.25V18H8.25v-.75a1.5,1.5,0,0,1,3,0V18H16.5V2.25A2.25,2.25,0,0,0,14.25,0ZM12.655,16.5a3,3,0,0,0-5.811,0H4.5V12.75H6.75v-1.5H4.5v-9a.75.75,0,0,1,.75-.75H6.845a3,3,0,0,0,5.811,0H14.25a.75.75,0,0,1,.75.75v9H12.75v1.5H15V16.5Z\"\n          transform=\"translate(0)\"\n          fill=\"#344857\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default Ticket\n","import { typeVar } from '../../../utils/constants'\n\nconst Export = () => {\n  return (\n    <svg\n    id=\"export\"\n    data-name=\"export\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            type={typeVar.IMAGE_SVG}\n                            width=\"15.556\"\n                            height=\"15.5\"\n                            viewBox=\"0 0 15.556 15.5\"\n                        >\n                            <g\n                                id=\"Group_168472\"\n                                data-name=\"Group 168472\"\n                                transform=\"translate(-1184.1 -638.75)\"\n                            >\n                                <path\n                                    id=\"Path_13745\"\n                                    data-name=\"Path 13745\"\n                                    d=\"M250.443,57.1v-.131l-.037-.075-.037-.056-.094-.112h-.019l-.112-.094-.056-.037-.075-.037h-4.625a.749.749,0,0,0,0,1.5H247.9l-8.446,8.389a.755.755,0,0,0,1.067,1.067l8.446-8.446v2.509a.749.749,0,0,0,1.5,0V57.27a.747.747,0,0,0-.019-.169Z\"\n                                    transform=\"translate(948.945 582.441)\"\n                                    fill=\"#d63548\"\n                                    stroke=\"#d63548\"\n                                    strokeWidth=\"0.5\"\n                                />\n                                <path\n                                    id=\"Path_13746\"\n                                    data-name=\"Path 13746\"\n                                    d=\"M127.129,154.372h7.64a2.247,2.247,0,0,0,2.247-2.247v-3.577a.749.749,0,0,0-1.5,0v3.577a.749.749,0,0,1-.749.749h-7.64a.749.749,0,0,1-.749-.749v-7.64a.749.749,0,0,1,.749-.749h3.577a.749.749,0,0,0,0-1.5h-3.577a2.247,2.247,0,0,0-2.247,2.247v7.64a2.247,2.247,0,0,0,2.247,2.247Z\"\n                                    transform=\"translate(1059.469 499.628)\"\n                                    fill=\"#d63548\"\n                                    stroke=\"#d63548\"\n                                    strokeWidth=\"0.5\"\n                                />\n                            </g>\n                        </svg>\n  )\n}\n\nexport default Export\n","import React from \"react\";\nimport {\n  DateRangePicker,\n  LocalizationProvider,\n} from \"@material-ui/pickers\"\nimport DateFnsUtils from \"@material-ui/pickers/adapter/date-fns\"\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport { useDispatch } from \"../../../redux/store\";\nimport { updateCal } from \"../../../redux/slices/billingSlice\";\nimport { useSelector } from \"react-redux\";\nimport CloseIcon from '@mui/icons-material/Close';\nexport const DateSelect = ({ dateRange, setDateRange }: any) => {\n  const getDate = (dateRange: any) => {\n    const s = `${new Date(dateRange[0]).toDateString()}`.split(\" \");\n    const e = `${new Date(dateRange[1]).toDateString()}`.split(\" \");\n    return `${s[1]} ${s[2]} ${s[3]} - ${e[1]} ${e[2]} ${e[3]} `\n  }\n  const { calOpen } = useSelector((state: any) => state.billing || {});\n\n  const dispatch = useDispatch();\n  const dateChangeFn = (date: any) => {\n    if (date[1] != null) {\n      dispatch(updateCal(false));\n      setDateRange(date);\n    }\n  }\n\n  return (\n    <LocalizationProvider dateAdapter={DateFnsUtils}>\n      <DateRangePicker\n        onOpen={() => { setDateRange([dateRange[0], null]) }}\n        open={calOpen}\n        startText=\"from\"\n        endText=\"to\"\n        value={dateRange}\n        onChange={(date: any) => dateChangeFn(date)}\n        renderInput={(startProps: any, endProps: any) => (\n          <div style={{position:'relative'}}>\n            <button onClick={() => dispatch(updateCal(!calOpen))} className=\"showDate\">\n              {(dateRange[0] == null && dateRange[1] == null) ? 'Select date' : getDate(dateRange)}\n              {/* {(dateRange[0] != null && dateRange[1] != null) && <span className=\"closeDate\"><CloseIcon onClick={()=>{setDateRange([null,null])}} /></span>} */}\n\n              <span className=\"cal\"><CalendarMonthIcon /></span>\n            </button>\n            {(dateRange[0] != null && dateRange[1] != null) && <span className=\"closeDate\"><CloseIcon onClick={()=>{setDateRange([null,null])}} /></span>}\n\n          </div>\n        )\n        }\n      />\n    </LocalizationProvider>\n  );\n}\n","import React, { useEffect, useState } from 'react'\n// import DateRange from './DateRange'\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport { CSVLink } from 'react-csv'\nimport { typeVar, billingKeys } from '../../../utils/constants'\nimport useLocales from '../../../hooks/useLocales'\nimport Export from '../icons/export'\nimport { downloadBillingInvoice } from '../../../redux/slices/billingSlice'\nimport { dispatch, useSelector } from '../../../redux/store'\nimport CustomerLeFilter from './filter-and-sort/CustomerLeFilter'\nimport EntityFilter from './filter-and-sort/EntityFilter'\nimport InvoiceAmtFilter from './filter-and-sort/InvoiceAmtFilter'\nimport InvoiceNoFilter from './filter-and-sort/InvoiceNoFilter'\nimport PoNoFilter from './filter-and-sort/PoNoFilter'\nimport StatusFilter from './filter-and-sort/StatusFilter'\n// import { DateRangePicker } from 'react-date-range';\n// import { DateRangePicker } from 'rsuite';\nimport { DateSelect } from './DateSelect';\nexport const Actions = ({\n    data,\n    pagination,\n    changeTake,\n    setDateRange,\n    dateRange,\n}: any) => {\n    const { t } = useLocales()\n    const modifyTake = (e: any) => {\n        changeTake(+e.target.value)\n    }\n    const [loading, setLoading] = useState(false)\n    const [completed, setCompleted] = useState(false)\n    const [dataStored, setDataStored] = useState(data)\n\n    // console.log(data)\n    useEffect(() => {\n        const l: any = document.getElementById('PageNumberInput')\n        l.value = pagination.take\n        setDataStored(dataStored)\n    }, [data])\n    const headers = [\n        { label: 'Invoice No.', key: billingKeys.INVOICE_NUMBER },\n        { label: 'Customer LE', key: billingKeys.CUSTOMER_LE },\n        { label: 'Tata Entity', key: billingKeys.TATA_ENTITY },\n        { label: 'PO number', key: billingKeys.PO_NUMBER },\n        { label: 'Payment Status', key: billingKeys.PAYMENT_STATUS },\n        { label: 'Invoice amt', key: billingKeys.INVOICE_AMOUNT },\n        { label: 'Invoice date', key: billingKeys.INVOICE_DATE },\n        { label: 'Due date', key: billingKeys.DUE_DATE },\n    ]\n\n    const dataFromAllDataTable = () => {\n        // if(!loading) {\n        //     setLoading(true)\n        // }\n        //     // setTimeout(() => {\n        //         setDataStored(data)\n        //         setLoading(false)\n        //         setCompleted(true)\n        //     // }, 1000); \n        return dataStored\n    }\n    const downloadDetails = async () => {\n        if (!loading) {\n            setLoading(true)\n        }\n        if (await data !== null) {\n            setTimeout(() => {\n                setDataStored(data)\n                setLoading(false)\n                setCompleted(true)\n            }, 1000);\n        }\n        return dataStored\n    }\n    const ExportToCsv = {\n        filename: 'InvoicesData.csv',\n        // headers: headers,\n        data: data\n    }\n\n    // const handleDownload = (title: any) => {\n    //     dispatch(downloadBillingInvoice(title))\n    // }\n\n    return (\n        <div className=\"action__elements\">\n            <div className=\"action__elementItem\">\n                <div className=\"tableRow__show\">\n                    <div className=\"selectRow\">\n                        <select name=\"\" id=\"PageNumberInput\" onChange={modifyTake}>\n                            <option value=\"5\">{t<string>('showing')} 5</option>\n                            <option value=\"10\">{t<string>('showing')} 10</option>\n                            <option value=\"15\">{t<string>('showing')} 15</option>\n                            <option value=\"25\">{t<string>('showing')} 25</option>\n                        </select>\n                    </div>\n                    <div className=\"outOfRow\">\n                        <span id=\"results\">\n                            {t<string>('of')} {pagination.Total} {t<string>('results')}\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"action__elementItem\" id=\"date-picker\">\n                <DateSelect setDateRange={setDateRange} dateRange={dateRange} />\n            </div>\n            <div className=\"action__elementItem\">\n                <span className=\"iconCta\">\n                    <span className=\"icon\">\n                        <Export />\n                    </span>\n                    {dataStored && (\n                        <CSVLink {...ExportToCsv} className=\"text\" asyncOnClick={true} onClick={downloadDetails} data-testid=\"csv-link\">\n                            {loading ? 'EXPORTING' :completed? 'EXPORT COMPLETE': t<string>('exportToCsv')}\n                            {/* {loading ? 'EXPORTING' : t<string>('exportToCsv')} */}\n                        </CSVLink>)}\n                </span>\n            </div>\n        </div>\n    )\n}\n","import { typeVar } from '../../../utils/constants'\n\nconst Overdue = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            type={typeVar.IMAGE_SVG}\n            width=\"43\"\n            height=\"43\"\n            viewBox=\"0 0 43 43\"\n        >\n            <g\n                id=\"Group_168523\"\n                data-name=\"Group 168523\"\n                transform=\"translate(-441.44 -269.75)\"\n            >\n                <circle\n                    id=\"Ellipse_646\"\n                    data-name=\"Ellipse 646\"\n                    cx=\"20\"\n                    cy=\"20\"\n                    r=\"20\"\n                    transform=\"translate(442.69 271)\"\n                    fill=\"#fff\"\n                    opacity=\"0.1\"\n                />\n                <path\n                    id=\"Path_13748\"\n                    data-name=\"Path 13748\"\n                    d=\"M100.61,9.363a21.274,21.274,0,1,0,15.019,6.231A21.251,21.251,0,0,0,100.61,9.363Zm0,40.667a19.44,19.44,0,1,1,13.724-5.694,19.418,19.418,0,0,1-13.724,5.694Z\"\n                    transform=\"translate(362.33 260.637)\"\n                    fill=\"#fff\"\n                    stroke=\"#fff\"\n                    strokeWidth=\"0.5\"\n                />\n                <path\n                    id=\"Path_13749\"\n                    data-name=\"Path 13749\"\n                    d=\"M340.166,173.465v-7.75a.916.916,0,0,0-1.832,0v8.13a.918.918,0,0,0,.268.648l5.858,5.858h0a.916.916,0,0,0,1.3-1.3Z\"\n                    transform=\"translate(123.689 117.406)\"\n                    fill=\"#fff\"\n                    stroke=\"#fff\"\n                    strokeWidth=\"0.5\"\n                />\n                <path\n                    id=\"Path_13750\"\n                    data-name=\"Path 13750\"\n                    d=\"M339.248,61.557a.916.916,0,0,0,.916-.916V59.248a.916.916,0,1,0-1.832,0v1.393A.916.916,0,0,0,339.248,61.557Z\"\n                    transform=\"translate(123.691 215.514)\"\n                    fill=\"#fff\"\n                    stroke=\"#fff\"\n                    strokeWidth=\"0.5\"\n                />\n                <path\n                    id=\"Path_13751\"\n                    data-name=\"Path 13751\"\n                    d=\"M339.248,468.31a.916.916,0,0,0-.916.916v1.394a.916.916,0,0,0,1.832,0v-1.394A.916.916,0,0,0,339.248,468.31Z\"\n                    transform=\"translate(123.691 -162.274)\"\n                    fill=\"#fff\"\n                    stroke=\"#fff\"\n                    strokeWidth=\"0.5\"\n                />\n                <path\n                    id=\"Path_13752\"\n                    data-name=\"Path 13752\"\n                    d=\"M126.779,272.2h-1.393a.916.916,0,0,0,0,1.832h1.393a.916.916,0,1,0,0-1.832Z\"\n                    transform=\"translate(320.762 18.438)\"\n                    fill=\"#fff\"\n                    stroke=\"#fff\"\n                    strokeWidth=\"0.5\"\n                />\n                <path\n                    id=\"Path_13753\"\n                    data-name=\"Path 13753\"\n                    d=\"M535.368,274.03h1.393a.916.916,0,0,0,0-1.832h-1.393a.916.916,0,1,0,0,1.832Z\"\n                    transform=\"translate(-57.029 18.439)\"\n                    fill=\"#fff\"\n                    stroke=\"#fff\"\n                    strokeWidth=\"0.5\"\n                />\n            </g>\n        </svg>\n    )\n}\n\nexport default Overdue\n","import { typeVar } from '../../../utils/constants'\n\nconst PaidInvoice = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            type={typeVar.IMAGE_SVG}\n            width=\"34.379\"\n            height=\"41\"\n            viewBox=\"0 0 34.379 41\"\n        >\n            <g\n                id=\"Group_168502\"\n                data-name=\"Group 168502\"\n                transform=\"translate(-568.463 -402.501)\"\n            >\n                <path\n                    id=\"Path_13755\"\n                    data-name=\"Path 13755\"\n                    d=\"M569.487,405.357c-.065.851,0,36.053,0,36.053l5.693-4.776,5.3,6.02,5.365-6.02,5.5,6.02,5.431-6.02,5.365,4.776-.393-37.1a14.6,14.6,0,0,0-4.973-.785H571.058S569.553,404.507,569.487,405.357Z\"\n                    fill=\"#fff\"\n                    opacity=\"0.15\"\n                />\n                <path\n                    id=\"Path_13738\"\n                    data-name=\"Path 13738\"\n                    d=\"M172.019,97.95V64.906c0-.78-.005-1.554,0-2.334a1.756,1.756,0,0,1,1.743-1.763c.26-.005.52,0,.78,0h24.545c.846,0,1.692-.01,2.537,0a1.757,1.757,0,0,1,1.737,1.773V97.95c.29-.122.581-.239.871-.362q-2.362-2.01-4.723-4.015c-.224-.189-.443-.377-.667-.571a.517.517,0,0,0-.718,0q-2.362,2.591-4.724,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.668-.734a.507.507,0,0,0-.718,0q-2.362,2.591-4.723,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.667-.734a.517.517,0,0,0-.719,0q-2.362,2.01-4.723,4.015c-.224.189-.443.377-.668.571a.508.508,0,1,0,.718.718q2.362-2.01,4.723-4.015c.224-.189.443-.377.668-.571h-.719q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.723-5.177c.224-.245.448-.489.668-.734h-.718q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.724-5.177c.224-.245.448-.489.667-.734h-.718q2.362,2.01,4.723,4.015c.224.189.443.377.667.571a.518.518,0,0,0,.871-.362V64.7c0-.718.01-1.437,0-2.155a2.8,2.8,0,0,0-2.757-2.762c-.245-.005-.494,0-.739,0H176.243c-.825,0-1.656-.01-2.481,0a2.793,2.793,0,0,0-2.752,2.767v35.4a.5.5,0,0,0,1.009,0Z\"\n                    transform=\"translate(397.953 343.22)\"\n                    fill=\"#fff\"\n                    stroke=\"#fff\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"1\"\n                />\n                <path\n                    id=\"Path_13754\"\n                    data-name=\"Path 13754\"\n                    d=\"M208.651,169.916l-7.852,7.852-3.475-3.474a1.1,1.1,0,0,0-1.56,1.56l4.241,4.241a1.08,1.08,0,0,0,.766.328,1.035,1.035,0,0,0,.766-.328l8.591-8.591a1.09,1.09,0,0,0,0-1.56,1.016,1.016,0,0,0-1.477-.027Z\"\n                    transform=\"translate(383.706 244.548)\"\n                    fill=\"#fff\"\n                />\n            </g>\n        </svg>\n    )\n}\n\nexport default PaidInvoice\n","import { typeVar } from '../../../utils/constants'\n\nconst UnpaidInvoice = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            type={typeVar.IMAGE_SVG}\n            width=\"34.379\"\n            height=\"41\"\n            viewBox=\"0 0 34.379 41\"\n        >\n            <g\n                id=\"Group_168502\"\n                data-name=\"Group 168502\"\n                transform=\"translate(-568.463 -402.501)\"\n            >\n                <path\n                    id=\"Path_13757\"\n                    data-name=\"Path 13757\"\n                    d=\"M569.487,405.357c-.065.851,0,36.053,0,36.053l5.693-4.776,5.3,6.02,5.365-6.02,5.5,6.02,5.431-6.02,5.365,4.776-.393-37.1a14.6,14.6,0,0,0-4.973-.785H571.058S569.553,404.507,569.487,405.357Z\"\n                    transform=\"translate(-0.145 -0.652)\"\n                    fill=\"#fff\"\n                    opacity=\"0.15\"\n                />\n                <path\n                    id=\"Path_13738\"\n                    data-name=\"Path 13738\"\n                    d=\"M172.019,97.95V64.906c0-.78-.005-1.554,0-2.334a1.756,1.756,0,0,1,1.743-1.763c.26-.005.52,0,.78,0h24.545c.846,0,1.692-.01,2.537,0a1.757,1.757,0,0,1,1.737,1.773V97.95c.29-.122.581-.239.871-.362q-2.362-2.01-4.723-4.015c-.224-.189-.443-.377-.667-.571a.517.517,0,0,0-.718,0q-2.362,2.591-4.724,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.668-.734a.507.507,0,0,0-.718,0q-2.362,2.591-4.723,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.667-.734a.517.517,0,0,0-.719,0q-2.362,2.01-4.723,4.015c-.224.189-.443.377-.668.571a.508.508,0,1,0,.718.718q2.362-2.01,4.723-4.015c.224-.189.443-.377.668-.571h-.719q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.723-5.177c.224-.245.448-.489.668-.734h-.718q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.724-5.177c.224-.245.448-.489.667-.734h-.718q2.362,2.01,4.723,4.015c.224.189.443.377.667.571a.518.518,0,0,0,.871-.362V64.7c0-.718.01-1.437,0-2.155a2.8,2.8,0,0,0-2.757-2.762c-.245-.005-.494,0-.739,0H176.243c-.825,0-1.656-.01-2.481,0a2.793,2.793,0,0,0-2.752,2.767v35.4a.5.5,0,0,0,1.009,0Z\"\n                    transform=\"translate(397.953 343.22)\"\n                    fill=\"#fff\"\n                    stroke=\"#fff\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"1\"\n                />\n                <path\n                    id=\"Path_13756\"\n                    data-name=\"Path 13756\"\n                    d=\"M199.872,117.693a1.105,1.105,0,0,0-1.563,0l-4.534,4.534-4.534-4.534a1.105,1.105,0,0,0-1.563,1.563l4.534,4.533-4.533,4.534a1.105,1.105,0,1,0,1.563,1.563l4.534-4.534,4.534,4.534a1.105,1.105,0,1,0,1.563-1.563l-4.534-4.534,4.534-4.534a1.105,1.105,0,0,0,0-1.563Z\"\n                    transform=\"translate(391.879 295.839)\"\n                    fill=\"#fff\"\n                />\n            </g>\n        </svg>\n    )\n}\n\nexport default UnpaidInvoice\n","import { typeVar } from '../../../utils/constants'\n\nconst Download = () => {\n  return (\n    <svg\n      id=\"Group_168119\"\n      data-name=\"Group 168119\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      type={typeVar.IMAGE_SVG}\n      width=\"17.378\"\n      height=\"17.381\"\n      viewBox=\"0 0 17.378 17.381\"\n    >\n      <path\n        id=\"Path_13531\"\n        data-name=\"Path 13531\"\n        d=\"M472.458,421.715a1.019,1.019,0,0,1,.758.7,1.438,1.438,0,0,1,.036.4q0,4.427,0,8.855a.334.334,0,0,0,.03.222c.048-.045.093-.087.136-.13q1.02-1.019,2.04-2.038a.927.927,0,0,1,.951-.251.905.905,0,0,1,.677.711.959.959,0,0,1-.3.94q-1.076,1.071-2.147,2.147-.8.8-1.6,1.6a.976.976,0,0,1-1.517,0q-1.866-1.865-3.73-3.731a.971.971,0,0,1-.1-1.369.961.961,0,0,1,1.429-.031c.679.672,1.352,1.351,2.028,2.026.044.044.089.085.136.13a.327.327,0,0,0,.03-.221q0-4.444,0-8.889a.967.967,0,0,1,.766-1.053.112.112,0,0,0,.028-.019Z\"\n        transform=\"translate(-463.599 -421.715)\"\n        fill=\"#344857\"\n      />\n      <path\n        id=\"Path_13532\"\n        data-name=\"Path 13532\"\n        d=\"M471.165,465.005c-.043.209-.078.42-.132.626a3.834,3.834,0,0,1-3.685,2.866q-4.869.014-9.739,0a3.848,3.848,0,0,1-3.82-3.816q0-.5,0-1a.966.966,0,1,1,1.932-.008,9.848,9.848,0,0,0,.032,1.3,1.9,1.9,0,0,0,1.831,1.587c1.832.012,3.665.005,5.5.006q2.078,0,4.157,0a1.928,1.928,0,0,0,1.941-1.482,4.148,4.148,0,0,0,.052-.895,4.156,4.156,0,0,1,.021-.694.963.963,0,0,1,1.862-.128l.05.142Z\"\n        transform=\"translate(-453.787 -451.124)\"\n        fill=\"#344857\"\n      />\n    </svg>\n  )\n}\n\nexport default Download\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Download from '../icons/download'\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport PersonAdd from '@mui/icons-material/PersonAdd';\nimport Settings from '@mui/icons-material/Settings';\nimport Logout from '@mui/icons-material/Logout';\nimport { downloadBillingInvoice, downloadBillingInvoiceCDR } from '../../../redux/slices/billingSlice'\nimport {\n    useDispatch as useAppDispatch,\n    useSelector\n} from '../../../redux/store'\nimport useLocales from '../../../hooks/useLocales';\n\n\nexport default function DownloadCdr({item,loading,\n    setLoading,\n    completed,\n    setCompleted,\n    setErrorinDownload}: any) {\n    const { t } = useLocales()\n    const dispatch = useAppDispatch();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleDownload = async(data: any) => {\n        dispatch(downloadBillingInvoice(data))\n    }\n    const handleDownloadCdr = (data: any) => {\n                // if(!loading) {\n                    setLoading(true)\n                    // }\n                    // if(await data !== null){\n                        setTimeout(() => {\n                            dispatch(downloadBillingInvoiceCDR(data,setErrorinDownload))\n                        }, 2000); \n                            setTimeout(() => {\n                            if(!completed) {\n                                setCompleted(true)\n                                setLoading(false)\n                            }\n                            }, 3000); \n                            // setCompleted(true)\n                            // setLoading(false)\n                    // }\n    }\n\n    return (\n        <React.Fragment>\n            {/* <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}> */}\n            <Tooltip title=\"DOWNLOAD\">\n                <IconButton\n                    className='download-cdr'\n                    onClick={handleClick}\n                    size=\"small\"\n                    sx={{ ml: 2 }}\n                    aria-controls={open ? 'account-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    aria-expanded={open ? 'true' : undefined}\n                >\n                    {/* <Avatar sx={{ width: 32, height: 32 }}>M</Avatar> */}\n                    <Download />\n                </IconButton>\n            </Tooltip>\n            {/* </Box> */}\n            <Menu\n                anchorEl={anchorEl}\n                id=\"account-menu\"\n                open={open}\n                onClose={handleClose}\n                onClick={handleClose}\n                PaperProps={{\n                    elevation: 0,\n                    sx: {\n                        overflow: 'visible',\n                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n                        mt: 1.5,\n                        '& .MuiAvatar-root': {\n                            width: 32,\n                            height: 32,\n                            ml: -0.5,\n                            mr: 1,\n                        },\n                        '&:before': {\n                            content: '\"\"',\n                            display: 'block',\n                            position: 'absolute',\n                            top: 0,\n                            right: 14,\n                            width: 10,\n                            height: 10,\n                            bgcolor: 'background.paper',\n                            transform: 'translateY(-50%) rotate(45deg)',\n                            zIndex: 0,\n                        },\n                    },\n                }}\n                transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n            >\n                <MenuItem onClick={() => handleDownload(item)}>\n                    {t<string>('invoice')}\n                </MenuItem>\n                <Divider />\n                <MenuItem onClick={() => handleDownloadCdr(item)}>\n                    {t<string>('cdr')}\n                </MenuItem>\n\n            </Menu>\n        </React.Fragment>\n    );\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Snackbar, { SnackbarOrigin } from '@mui/material/Snackbar';\nimport { SnackbarContent } from '@material-ui/core';\nimport IconButton from '@mui/material/IconButton';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport interface State extends SnackbarOrigin {\n    open: boolean;\n}\n\nexport default function CDRError() {\n    const [state, setState] = React.useState<State>({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n    });\n    const { vertical, horizontal, open } = state;\n\n    const handleClick = (newState: SnackbarOrigin) => () => {\n        setState({ open: true, ...newState });\n    };\n\n    const handleClose = () => {\n        setState({ ...state, open: false });\n    };\n\n    const buttons = (\n        <React.Fragment>\n            <Button\n                onClick={handleClick({\n                    vertical: 'top',\n                    horizontal: 'right',\n                })}\n            >\n                Top-Right\n            </Button>\n        </React.Fragment>\n    );\n\n    const action = (\n        <React.Fragment>\n            <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={handleClose}\n            >\n                <CloseIcon fontSize=\"small\" />\n            </IconButton>\n        </React.Fragment>\n    );\n\n    return (\n        <Stack spacing={2} sx={{ maxWidth: 300 }} style={{ position: 'fixed', top: 100, right: 0, zIndex: 1000, maxWidth: '300px' }} className='cdr-error'>\n            {buttons}\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={7500}\n                action={action}\n                onClose={handleClose}\n                message={<div className='snackbar-content--container'>\n                    <IconButton aria-label=\"error\">\n                        <ErrorOutlineIcon />\n                    </IconButton>\n                    <div className='snackbar-content'>\n                        <p>CDR File can&lsquo;t be Prepared</p><p>Please try downloading AM2398756710 again</p></div></div>}\n                key={vertical + horizontal}\n            />\n        </Stack>\n    );\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Snackbar, { SnackbarOrigin } from '@mui/material/Snackbar';\nimport { SnackbarContent } from '@material-ui/core';\nimport IconButton from '@mui/material/IconButton';\nimport RotateRightIcon from '@mui/icons-material/RotateRight';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport interface State extends SnackbarOrigin {\n    open: boolean;\n}\n\nexport default function CDRDownloading() {\n    const [state, setState] = React.useState<State>({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n    });\n    const { vertical, horizontal, open } = state;\n\n    const handleClick = (newState: SnackbarOrigin) => () => {\n        setState({ open: true, ...newState });\n    };\n\n    const handleClose = () => {\n        setState({ ...state, open: false });\n    };\n\n    const buttons = (\n        <React.Fragment>\n            <Button\n                onClick={handleClick({\n                    vertical: 'top',\n                    horizontal: 'right',\n                })}\n            >\n                Top-Right\n            </Button>\n        </React.Fragment>\n    );\n\n    const action = (\n        <React.Fragment>\n            <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={handleClose}\n            >\n                <CloseIcon fontSize=\"small\" />\n            </IconButton>\n        </React.Fragment>\n    );\n\n    return (\n        <Stack spacing={2} sx={{ maxWidth: 300 }} style={{ position: 'fixed', top: 100, right: 0, zIndex: 1000, maxWidth: '300px' }} className='cdr-downloading'>\n            {/* {buttons} */}\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={7500}\n                action={action}\n                onClose={handleClose}\n                message={<div className='snackbar-content--container'>\n                    <IconButton aria-label=\"progress\">\n                        <RotateRightIcon />\n                    </IconButton>\n                    <div className='snackbar-content'>\n                        <p>CDR File is Downloading</p><p>The download of AM2398756710 is in progress</p></div></div>}\n                key={vertical + horizontal}\n            />\n        </Stack>\n    );\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Snackbar, { SnackbarOrigin } from '@mui/material/Snackbar';\nimport { SnackbarContent } from '@material-ui/core';\nimport IconButton from '@mui/material/IconButton';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport interface State extends SnackbarOrigin {\n    open: boolean;\n}\n\nexport default function CDRDownloaded() {\n    const [state, setState] = React.useState<State>({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n    });\n    const { vertical, horizontal, open } = state;\n\n    const handleClick = (newState: SnackbarOrigin) => () => {\n        setState({ open: true, ...newState });\n    };\n\n    const handleClose = () => {\n        setState({ ...state, open: false });\n    };\n\n    const buttons = (\n        <React.Fragment>\n            <Button\n                onClick={handleClick({\n                    vertical: 'top',\n                    horizontal: 'right',\n                })}\n            >\n                \n            </Button>\n        </React.Fragment>\n    );\n\n    const action = (\n        <React.Fragment>\n            <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={handleClose}\n            >\n                <CloseIcon fontSize=\"small\" />\n            </IconButton>\n        </React.Fragment>\n    );\n\n    return (\n        <Stack spacing={2} style={{ position: 'fixed', top: 100, right: 0, zIndex: 1000, maxWidth: '300px' }} className='cdr-downloaded'>\n            {buttons}\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={7500}\n                action={action}\n                onClose={handleClose}\n                message={<div className='snackbar-content--container'>\n                    <IconButton aria-label=\"done\">\n                        <CheckCircleIcon />\n                    </IconButton>\n                    <div className='snackbar-content'>\n                        <p>Successfully Downloaded!</p><p>The file AM2398756710 has been downloaded Click on the link to open the file https://www.openfile.com/</p></div></div>}\n                key={vertical + horizontal}\n            />\n        </Stack>\n    );\n}\n","import React, { useState, useEffect } from 'react'\nimport Table from '@mui/material/Table'\nimport {\n    ListItemIcon,\n    Tooltip,\n    Button,\n} from '@mui/material'\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator'\nimport CheckBoxIcon from '@mui/icons-material/CheckBox'\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { styled } from '@mui/material/styles'\nimport TableHead from '@mui/material/TableHead'\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\nimport ArrowDownwardRoundedIcon from '@mui/icons-material/ArrowDownwardRounded';\nimport CustomerLeFilter from './filter-and-sort/CustomerLeFilter'\nimport EntityFilter from './filter-and-sort/EntityFilter'\nimport InvoiceAmtFilter from './filter-and-sort/InvoiceAmtFilter'\nimport InvoiceNoFilter from './filter-and-sort/InvoiceNoFilter'\nimport PoNoFilter from './filter-and-sort/PoNoFilter'\nimport StatusFilter from './filter-and-sort/StatusFilter'\n\nimport UnfoldMoreIcon from '@mui/icons-material/UnfoldMore'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport useLocales from '../../../hooks/useLocales'\nimport Time from '../icons/time'\nimport Pdf from '../icons/pdf'\nimport Ticket from '../icons/ticket'\nimport Download from '../icons/download'\nimport { Actions } from './Actions'\nimport Pagination from '@mui/material/Pagination'\nimport Stack from '@mui/material/Stack'\nimport { getPageParms, setUlrParms } from '../../../utils/helpers'\nimport { useDispatch as useAppDispatch } from '../../../redux/store'\nimport { Link } from 'react-router-dom'\nimport MultiSelect from '../elements/multiSelect'\nimport { apiVrbls } from '../../../utils/constants'\nimport moment from 'moment'\nimport Invoice from '../icons/invoice'\nimport Overdue from '../icons/overdue'\nimport PaidInvoice from '../icons/paidInvoice'\nimport UnpaidInvoice from '../icons/unpaidInvoice'\nimport DownloadCdr from './DownloadCdr'\n\nimport { Avatar, Divider } from '@mui/material'\nimport Logout from '@mui/icons-material/Logout'\nimport Settings from '@mui/icons-material/Settings'\nimport PersonAdd from '@mui/icons-material/PersonAdd'\nimport Loader from './loader-and-snackbar/Loader'\nimport CDRError from './loader-and-snackbar/CDRError'\nimport CDRPreparing from './loader-and-snackbar/CDRPreparing'\nimport CDRDownloading from './loader-and-snackbar/CDRDownloading'\nimport CDRDownloaded from './loader-and-snackbar/CDRDownloaded'\nimport { CSSProperties } from 'styled-components'\n\n// import { Menu, MenuItem, MenuButton, ClickEvent } from '@szhsin/react-menu';\n\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { getValue } from '@testing-library/user-event/dist/utils';\nimport { Menu as TbMenu, MenuItem as TbMenuItem, MenuButton, ClickEvent } from '@szhsin/react-menu'\nimport '@szhsin/react-menu/dist/index.css'\nimport '@szhsin/react-menu/dist/transitions/slide.css'\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n        fontSize: 14,\n    },\n}))\n\nconst reorder = (list: any, startIndex: any, endIndex: any) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n    return result\n}\n\nconst grid = 8\n\nconst getItemStyle = (isDragging: any, draggableStyle: any) => ({\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    background: isDragging ? 'lightgreen' : 'grey',\n    ...draggableStyle,\n})\n\nconst getListStyle = (isDraggingOver: any) => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250,\n})\n\nconst activeStyle = {\n    border: '2px solid #3B6FED'\n}\n\nconst DataTable = ({\n    TableData,\n    sortAction,\n    Total,\n    clearFilterClm,\n    pageAction,\n    take,\n    filterAction,\n    ClmSearch,\n    page,\n    clearAllfilter,\n    handleShow,\n    handledownloadPdf,\n    handledownloadCdrPdf,\n    setDateRange,\n    dateRange,\n    handledownloadViewpdf,\n    filterValues\n}: any) => {\n    const { t } = useLocales()\n    const { data, columns, tableName, allMasterData } = TableData\n    const dispatch = useAppDispatch()\n    const totalCount = Math.ceil(Total / take)\n    const [sortdir, setSortdir]: any = useState(null)\n\n    const [allData, setAllData] = useState(data)\n    const [loading, setLoading] = useState(false)\n    const [completed, setCompleted] = useState(false)\n    const [errorinDownload, setErrorinDownload] = useState(false)\n\n    //   const selectionRange = {\n    //     startDate: startDate,\n    //     endDate: endDate,\n    //     key: 'selection',\n    //   }\n    //   //   console.log((startDate).toLocaleDateString().substring(0,10))\n    // \n    //   const handleSelect = (date: any) => {\n    //     const filtered = data.filter((item: any) => {\n    //       const invoiceDate = new Date(item['Invoice_date'])\n    //       return (\n    //         invoiceDate >= date.selection.startDate &&\n    //         invoiceDate <= date.selection.endDate\n    //       )\n    //     })\n    //     setstartDate(date.selection.startDate)\n    //     setEndDate(date.selection.endDate)\n    //   }\n\n    function useHover(\n        styleOnHover: CSSProperties,\n        styleOnNotHover: CSSProperties = {}\n    ) {\n        const [style, setStyle] = React.useState(styleOnNotHover)\n        const onMouseEnter = () => setStyle(styleOnHover)\n        const onMouseLeave = () => setStyle(styleOnNotHover)\n        return { style, onMouseEnter, onMouseLeave }\n    }\n    const hover = useHover({ borderColor: 'green', userSelect: 'none' })\n\n    const changeTake = (take: any) => {\n        updateData(page, take)\n    }\n\n    const changePage = (da: any, pageNumber: any) => {\n        updateData(pageNumber, take)\n    }\n\n    const updateData = (page: any, take: any) => {\n        // console.log(Total, page, take)\n        if (take * page > Total) {\n            dispatch(pageAction(Math.ceil(Total / take), take))\n            setUlrParms(page, take)\n        } else {\n            dispatch(pageAction(page, take))\n            setUlrParms(page, take)\n        }\n    }\n    const sort = (head: any) => {\n        if (head.sort) {\n            dispatch(sortAction(head, sortdir === -1 ? 1 : -1))\n            setSortdir(sortdir === -1 ? 1 : -1)\n        }\n    }\n\n    const handleDownload = (data: any) => {\n        dispatch(handledownloadPdf(data))\n    }\n    const handleDownloadCdr = (data: any) => {\n        dispatch(handledownloadCdrPdf(data))\n    }\n\n    const handleViewPdf = (data: any) => {\n        dispatch(handledownloadViewpdf(data))\n    }\n\n    // Vertical Dropdown code\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget)\n    }\n    const handleClose = () => { setAnchorEl(null) }\n\n    // Handle Tooltip closing & opening\n    const [opened, setOpen] = React.useState(false)\n\n    const handleTooltipClose = () => {\n        setOpen(false)\n    }\n\n    const handleTooltipOpen = () => {\n        setOpen(true)\n    }\n\n    const [isHover, setIsHover] = useState(false)\n\n    const handleMouseEnter = () => {\n        setIsHover(true)\n    }\n    const handleMouseLeave = () => {\n        setIsHover(false)\n    }\n\n    const boxStyle = {\n        // border: '2px solid grey',\n        // margin: '10px 0px',\n    }\n    const pendingStyle = {\n        // border: '2px solid red',\n        // margin: '10px 0px',\n    }\n    const completedStyle = {\n        // border: '2px solid green',\n        // margin: '10px 0px',\n    }\n    const noStyle = {\n        // cursor: 'pointer',\n    }\n\n\n\n\n    const result1: any[] = []\n    const [tableData, setTableData] = useState(data)\n    const onSearch = (e: any, head: any, index: any) => {\n        const filterData = tableData.filter((obj: any) =>\n            obj[head['eleName']].toString().includes(e.target.value)\n        )\n        setTableData(filterData)\n    }\n\n    useEffect(() => {\n        setTableData(data)\n    }, [data])\n\n    const onSortAscending = (e: any, head: any, index: any) => {\n\n        if (index == 0 || index == 3) {\n            const sortedDataAscending = [...data].sort(\n                (a: any, b: any) => a[head['eleName']] - b[head['eleName']]\n            )\n            setTableData(sortedDataAscending)\n        } else {\n            const sortedDataAscending = [...data].sort((a: any, b: any) =>\n                a[head['eleName']].localeCompare(b[head['eleName']])\n            )\n            setTableData(sortedDataAscending)\n        }\n    }\n    const onSortDescending = (e: any, head: any, index: any) => {\n        if (index == 0 || index == 3) {\n            const sortedDataDescending = [...data].sort(\n                (a: any, b: any) => b[head['eleName']] - a[head['eleName']]\n            )\n            setTableData(sortedDataDescending)\n        } else {\n            const sortedDataDescending = [...data].sort((a: any, b: any) =>\n                b[head['eleName']].localeCompare(a[head['eleName']])\n            )\n            setTableData(sortedDataDescending)\n        }\n    }\n\n    const clearFilter = () => {\n        setTableData(data)\n    }\n    const clearFilterMasterData = () => {\n        setTableData(data)\n    }\n\n    const downloadCompleteShowing = async () => {\n        if (loading) {\n            if (await !loading) {\n                return <CDRDownloaded />\n            } else {\n                return null\n            }\n        }\n    }\n\n    const [columnsDropdown, setColumnsDropdown] = useState(result1);\n\n\n\n    useEffect(() => {\n        setColumnsDropdown(columns);\n    }, [])\n\n    const allowDrop = (ev: any) => {\n        ev.preventDefault();\n    }\n\n    const drag = (ev: any, item: any, index: any) => {\n        ev.dataTransfer.setData(\"columnData\", JSON.stringify({ ...item, index }));\n    }\n\n    const drop = (ev: any) => {\n        ev.preventDefault();\n        const data = JSON.parse(ev.dataTransfer.getData(\"columnData\"));\n        if (ev.target.id) {\n            const draggedPosition = ev.target.id.split('-');\n            // let draggedPosition = ;      \n            const col = [...columnsDropdown].filter((val, ind) => ind !== data['index']);\n            delete data['index'];\n            col.splice(parseInt(draggedPosition[1]), 0, data);\n            setColumnsDropdown(col);\n        }\n    }\n\n    const [drops, setdrops] = useState('');\n    const [hiddenClms, SetHiddentClmns] = useState<any>([]);\n\n    const changeActive = (item: any) => {\n        const i = hiddenClms.indexOf(`${item}`);\n        console.log(hiddenClms);\n        if (i == -1) {\n            SetHiddentClmns((s: any) => [...s, item]);\n        } else {\n            const m = hiddenClms;\n            m.splice(i, 1);\n            SetHiddentClmns((s: any) => m);\n        }\n    }\n\n\n    const getValue = () => {\n        return 'vdf'\n    }\n    return (\n        <>\n            {/* <CustomerLeFilter /> */}\n            {/* <EntityFilter /> */}\n            {/* <InvoiceNoFilter /> */}\n            {/* <PoNoFilter /> */}\n            {/* <InvoiceAmtFilter />\n            {/* <StatusFilter /> */}\n            {/* <Loader /> */}\n            {/* <CDRError /> */}\n            {errorinDownload ? <CDRError /> : null}\n            {/* <CDRPreparing /> */}\n            {loading ? <CDRDownloading /> : null}\n            {completed ? <CDRDownloaded /> : null}\n            {downloadCompleteShowing}\n            {/* {loading ? !loading? <CDRDownloaded /> : null: null} */}\n            {/* <CDRDownloaded /> */}\n            <Actions\n                setDateRange={setDateRange}\n                dateRange={dateRange}\n                data={allMasterData}\n                pagination={{ take, Total }}\n                changeTake={(e: any) => {\n                    changeTake(e)\n                }}\n            />\n            <TableContainer component={Paper} className=\"table__Container buildfix4\">\n                <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\n                    <TableHead className=\"TableHead\" id=\"table-head-element-display-fix\">\n                        <TableRow id=\"table-head\">\n                            <StyledTableCell>\n                                <TbMenu\n                                    menuButton={\n                                        <MenuButton id=\"border-removing\">\n                                            <MoreVertIcon />\n                                        </MenuButton>\n                                    }\n\n                                    transition\n                                    onDragOver={allowDrop} onDrop={drop}\n                                >\n                                    {columns.map((item: any, index: any) => {\n                                        return (\n                                            <>\n                                                <TbMenuItem\n                                                    key={index}\n                                                    className=\"list-item\"\n                                                    draggable={true}\n                                                    onDragStart={(ev) => drag(ev, item, index)}\n                                                    id={`${item.eleName}-${index}`}\n                                                >\n                                                    <ListItemIcon>\n                                                        <DragIndicatorIcon fontSize=\"small\" />\n                                                        {hiddenClms.includes(item.eleName) ? (<CheckBoxOutlineBlankIcon\n                                                            onClick={(e) => {\n                                                                changeActive(item.eleName)\n                                                            }}\n                                                            fontSize=\"small\"\n                                                        />) : (\n                                                            <CheckBoxIcon\n                                                                onClick={(e) => changeActive(item.eleName)}\n                                                                fontSize=\"small\"\n                                                            />\n                                                        )}\n                                                    </ListItemIcon>\n                                                    <Button\n                                                        onClick={(e) => {\n                                                            changeActive(item.eleName)\n                                                        }}\n                                                    >\n                                                        {item.headTrans}\n                                                    </Button>\n                                                </TbMenuItem>\n                                            </>\n                                        )\n                                    })}\n                                </TbMenu>\n                            </StyledTableCell>\n                            {/* Table Heads */}\n                            {columns.map((head: any, index: any) => (\n                                !hiddenClms.includes(head.eleName) && <StyledTableCell\n                                    key={`${head.headTrans}${index}`}\n                                    align=\"right\"\n                                >\n                                    <div className=\"th_wrapper\">\n                                        <button\n                                            id=\"hiding\"\n                                            name={t<string>(`tables.${tableName}.${head.headTrans}`)}\n                                            className=\"voidBtn\"\n                                            key={`clickkey-${head.headTrans}${index}`}\n                                        >\n                                            {t<string>(`tables.${tableName}.${head.headTrans}`)}\n                                            {(head.sort || head.search || head.filter) && (\n                                                <>\n                                                    <div className='customer-le-menu'>\n                                                        <Button\n                                                            id=\"basic-button\"\n                                                            aria-controls={drops == head.headTrans ? 'basic-menu' : undefined}\n                                                            aria-haspopup=\"true\"\n                                                            aria-expanded={drops == head.headTrans ? 'true' : undefined}\n                                                            onClick={(e) => {\n                                                                handleClick(e);\n                                                                if (drops == head.headTrans) {\n                                                                    setdrops('')\n                                                                } else {\n                                                                    setdrops(head.headTrans);\n                                                                    setTimeout(() => {\n                                                                        if (head.search) {\n                                                                            const m: any = document.getElementById(`${head.headTrans}${tableName}${head.eleName}`);\n                                                                            const p = filterValues.filter((g: any) => g.element == head.eleName);\n\n                                                                            if (p.length > 0) {\n                                                                                if (p[0].values[0]) {\n                                                                                    m.value = p[0].values[0]\n                                                                                }\n                                                                            }\n                                                                        }\n\n                                                                        if (head.filter) {\n                                                                            const p = filterValues.filter((g: any) => g.element == head.filterData?.element);\n                                                                            if (p.length > 0) {\n                                                                                p[0].values.map((f: any) => {\n                                                                                    const m: any = document.getElementById(`${head.eleName}${f}status-check-box`);\n                                                                                    m.checked = true\n\n                                                                                })\n                                                                            }\n                                                                        }\n                                                                    }, 300);\n\n                                                                }\n                                                            }}\n                                                            startIcon={<UnfoldMoreIcon />}\n                                                        >\n                                                        </Button>\n                                                        <Menu\n                                                            id={`basic-menu`}\n                                                            anchorEl={anchorEl}\n                                                            open={drops == head.headTrans}\n                                                            onClose={() => {\n                                                                handleClose();\n                                                                if (drops == head.headTrans) {\n                                                                    setdrops('')\n                                                                } else {\n                                                                    setdrops(head.headTrans);\n                                                                }\n                                                            }}\n                                                            MenuListProps={{\n                                                                'aria-labelledby': 'basic-button',\n                                                            }}\n                                                        >\n                                                            {head.search ? <MenuItem>\n                                                                <input\n                                                                    id={`${head.headTrans}${tableName}${head.eleName}`}\n                                                                    onInput={(e: any) => {\n                                                                        dispatch(ClmSearch(head.eleName, e.target.value))\n                                                                    }} type='search' placeholder='search' className='inside_search' />\n                                                            </MenuItem> : null}\n                                                            {head.filter &&\n                                                                <div className='FilterItems'>\n                                                                    {head.filterData?.values && head.filterData.values.map((w: any, i: any) => {\n                                                                        return <MenuItem className='clkIgnr' key={`eleCheck-${w}-${i}`}>\n                                                                            <input id={`${head.eleName}${w}status-check-box`} onChange={(e) => {\n                                                                                dispatch(filterAction(head.filterData?.element, w, e.target.checked))\n                                                                            }} className='clkIgnr check-Box status-check-box' type=\"checkbox\" />\n                                                                            <label htmlFor={`${head.eleName}${w}status-check-box`} className='clkIgnr span-label'>{w}</label>\n                                                                        </MenuItem>\n                                                                    })}\n                                                                </div>\n                                                            }\n                                                            {head.sort ? <MenuItem onClick={() => { dispatch(sortAction(head, 1)) }} ><ArrowUpwardRoundedIcon />Sorting Ascending (A-Z)</MenuItem> : null}\n                                                            {head.sort ? <MenuItem onClick={() => { dispatch(sortAction(head, -1)) }} ><ArrowDownwardRoundedIcon />Sorting Descending (Z-A)</MenuItem> : null}\n                                                            <MenuItem onClick={() => {\n                                                                dispatch(clearFilterClm(head.eleName))\n                                                                if (head.search) {\n                                                                    const m: any = document.getElementById(`${head.headTrans}${tableName}${head.eleName}`);\n                                                                    m.value = ''\n                                                                }\n                                                                if (head.filter) {\n                                                                    head.filterData.values.map((w: any, i: any) => {\n                                                                        const m: any = document.getElementById(`${head.eleName}${w}status-check-box`);\n                                                                        m.checked = false\n                                                                    })\n                                                                }\n                                                            }}>CLEAR</MenuItem>\n                                                        </Menu>\n                                                    </div>\n                                                </>\n                                            )}\n                                            {/* <button onClick={(e: any)=>onSortAscending(e,head)}>sort</button> */}\n                                        </button>\n                                    </div>\n                                </StyledTableCell>\n                            ))}\n                            <StyledTableCell align=\"right\">\n                                <Button onClick={()=>{dispatch(clearAllfilter())}} className=\"th_wrapper\">\n                                    <span className='clear-filters'>Clear all filters</span>\n                                </Button>\n                            </StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    {/* Table Body */}\n                    <TableBody\n                        data-testid=\"table-body-element\"\n                        className=\"TableBody\"\n                        id=\"table-body-element\"\n                    >\n                        {data &&\n                            data.map((item: any, index: any) => (\n                                <TableRow\n                                    style={\n                                        isHover == true\n                                            ? item.icon == 'overdue'\n                                                ? boxStyle\n                                                : item.icon == 'pending'\n                                                    ? pendingStyle\n                                                    : item.icon == 'completed'\n                                                        ? completedStyle\n                                                        : noStyle\n                                            : noStyle\n                                    }\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseLeave={handleMouseLeave}\n                                    id=\"table-data\"\n                                    key={item.id}\n                                >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <a href=\"/\">\n                                            <a href=\"#/\">\n                                                {item.icon == 'overdue' && (\n                                                    <span className=\"overdue\">\n                                                        <Overdue />\n                                                    </span>\n                                                )}\n                                                {item.icon == 'pending' && (\n                                                    <span className=\"pending\">\n                                                        <UnpaidInvoice />\n                                                    </span>\n                                                )}\n                                                {item.icon == 'completed' && (\n                                                    <span className=\"completed\">\n                                                        <PaidInvoice />\n                                                    </span>\n                                                )}\n                                            </a>\n                                        </a>\n                                    </TableCell>\n                                    {columns.map((clm: any, index: any) => (\n                                        !hiddenClms.includes(clm.eleName) &&\n                                        <>\n                                            <Tooltip\n                                                title={\n                                                    item[clm.eleName == 'Tata_Entity' ? clm.eleName : '']\n                                                }\n                                            >\n                                                <TableCell\n                                                    id=\"td-element\"\n                                                    className=\"table-cell-tooltip\"\n                                                    key={`tbl-clm${index}`}\n                                                    style={{ width: 160 }}\n                                                    align=\"right\"\n                                                >\n                                                    <span style={{ width: '160px', display: 'block' }}>{item[clm.eleName]}{' '}</span>\n                                                </TableCell>\n                                            </Tooltip>\n                                        </>\n                                    ))}\n                                    <TableCell style={{ width: 160 }} align=\"right\">\n                                        <ul className=\"actionButtons\">\n                                            <Tooltip title=\"VIEW INVOICE\">\n                                                <button\n                                                    className=\"actionButton__item\"\n                                                    onClick={() => handleViewPdf(item)}\n                                                >\n                                                    <span>\n                                                        {' '}\n                                                        <Pdf />{' '}\n                                                    </span>\n                                                </button>\n                                            </Tooltip>\n                                            <Tooltip title=\"RAISE A TICKET\">\n                                                <button\n                                                    className=\"actionButton__item\"\n                                                    onClick={(e) => {\n                                                        handleShow()\n                                                    }}\n                                                >\n                                                    <span>\n                                                        <Ticket />\n                                                    </span>\n                                                </button>\n                                            </Tooltip>\n                                            <DownloadCdr\n                                                loading={loading}\n                                                setLoading={setLoading}\n                                                completed={completed}\n                                                setCompleted={setCompleted}\n                                                setErrorinDownload={setErrorinDownload}\n                                                item={item}\n                                            />\n                                        </ul>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Stack\n                spacing={3}\n                sx={{\n                    marginTop: 3,\n                }}\n            >\n                <Pagination\n                    onChange={changePage}\n                    page={page}\n                    className=\"tablePag\"\n                    count={totalCount}\n                    variant=\"outlined\"\n                    shape=\"rounded\"\n                />\n            </Stack>\n        </>\n    )\n}\n\nexport default DataTable\n","import { typeVar } from '../../../utils/constants'\n\nconst Invoice = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            type={typeVar.IMAGE_SVG}\n            width=\"34.379\"\n            height=\"41\"\n            viewBox=\"0 0 34.379 41\"\n        >\n            <g\n                id=\"Group_168502\"\n                data-name=\"Group 168502\"\n                transform=\"translate(-568.463 -402.501)\"\n            >\n                <path\n                    id=\"Subtraction_1\"\n                    data-name=\"Subtraction 1\"\n                    d=\"M10972.47-15735.3h0l-5.6-5.756-4.956,5.756-5.277-5.756-5.677,4.156v-35.1l1.041-2h26.781l4.077.563.4,7.427v29.587l-5.115-4.635-5.676,5.756Zm-14.058-30.34v7h18v-7Z\"\n                    transform=\"translate(-10381.451 16177.645)\"\n                    fill=\"#1a73e8\"\n                    opacity=\"0.1\"\n                />\n                <path\n                    id=\"Path_13738\"\n                    data-name=\"Path 13738\"\n                    d=\"M172.019,97.95V64.906c0-.78-.005-1.554,0-2.334a1.756,1.756,0,0,1,1.743-1.763c.26-.005.52,0,.78,0h24.545c.846,0,1.692-.01,2.537,0a1.757,1.757,0,0,1,1.737,1.773V97.95c.29-.122.581-.239.871-.362q-2.362-2.01-4.723-4.015c-.224-.189-.443-.377-.667-.571a.517.517,0,0,0-.718,0q-2.362,2.591-4.724,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.668-.734a.507.507,0,0,0-.718,0q-2.362,2.591-4.723,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.667-.734a.517.517,0,0,0-.719,0q-2.362,2.01-4.723,4.015c-.224.189-.443.377-.668.571a.508.508,0,1,0,.718.718q2.362-2.01,4.723-4.015c.224-.189.443-.377.668-.571h-.719q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.723-5.177c.224-.245.448-.489.668-.734h-.718q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.724-5.177c.224-.245.448-.489.667-.734h-.718q2.362,2.01,4.723,4.015c.224.189.443.377.667.571a.518.518,0,0,0,.871-.362V64.7c0-.718.01-1.437,0-2.155a2.8,2.8,0,0,0-2.757-2.762c-.245-.005-.494,0-.739,0H176.243c-.825,0-1.656-.01-2.481,0a2.793,2.793,0,0,0-2.752,2.767v35.4a.5.5,0,0,0,1.009,0Z\"\n                    transform=\"translate(397.953 343.22)\"\n                    fill=\"#1a73e8\"\n                    stroke=\"#1a73e8\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"1\"\n                />\n                <path\n                    id=\"Path_13739\"\n                    data-name=\"Path 13739\"\n                    d=\"M263.564,159.481H245.679c-.239,0-.494-.02-.734,0h-.036l.51.51v-7.032l-.51.51h17.885c.24,0,.494.02.734,0h.036l-.51-.51v7.032a.51.51,0,0,0,1.019,0v-7.032a.518.518,0,0,0-.51-.51H247.212c-.754,0-1.513-.031-2.268,0h-.036a.518.518,0,0,0-.51.51v7.032a.518.518,0,0,0,.51.51h16.351c.754,0,1.513.031,2.268,0h.036a.51.51,0,0,0,0-1.019Z\"\n                    transform=\"translate(331.402 259.198)\"\n                    fill=\"#1a73e8\"\n                    stroke=\"#1a73e8\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"1\"\n                />\n                <path\n                    id=\"Path_13740\"\n                    data-name=\"Path 13740\"\n                    d=\"M263.725,315.418H247.373c-.754,0-1.513-.031-2.267,0h-.036a.51.51,0,0,0,0,1.019h16.351c.754,0,1.513.031,2.267,0h.036A.51.51,0,0,0,263.725,315.418Z\"\n                    transform=\"translate(331.241 111.414)\"\n                    fill=\"#1a73e8\"\n                    stroke=\"#1a73e8\"\n                    strokeWidth=\"1\"\n                />\n            </g>\n        </svg>\n    )\n}\n\nexport default Invoice\n","import { useEffect, useState } from 'react'\nimport RaiseTicket from '../common/elements/RaiseTicket'\nimport DataTable from '../common/tables/DataTables'\nimport { BreadCrums } from '../common/elements/BreadCrum'\nimport { PageSearch } from '../common/elements/PageSearch'\nimport { breadCrums, dataTables } from '../../utils/constants'\nimport {\n    useDispatch as useAppDispatch,\n    useSelector\n} from '../../redux/store'\nimport { cardFilter, ChangePageBilling, viewBillingInvoice, downloadBillingInvoice, downloadBillingInvoiceCDR, filterData, loadInvoices, searchData, sortData, ClmSearch, removeCLmFilter, clearAllfilter } from '../../redux/slices/billingSlice'\nimport useLocales from '../../hooks/useLocales'\nimport Invoice from '../common/icons/invoice'\nimport Overdue from '../common/icons/overdue'\nimport PaidInvoice from '../common/icons/paidInvoice'\nimport UnpaidInvoice from '../common/icons/unpaidInvoice'\nimport Card from '../common/elements/card'\nimport { getCardCount } from '../../utils/helpers'\nimport { getAcDetails } from '../../redux/slices/accountSlice'\nimport moment from 'moment'\nimport ModalTicketError from '../modals/ModalTicketError'\n\n\nexport const Billing = ({ toggleTheme }: { toggleTheme: any }) => {\n\n    const { PageData = [], MasterData = [], total, page, take ,filterValue} = useSelector((state: any) => state.billing || {});\n    const { dashBoardWidth } = useSelector((state: any) => state.common);\n\n    const [dateRange, setDateRange] = useState<any>([null, null]);\n    const getDate = (dateRange: any) => {\n        const s = `${new Date(dateRange).toLocaleDateString()}`.split(\"/\");\n        console.log(`${new Date(dateRange).toLocaleDateString()}`);\n        return `${s[2]}-${s[0]}-${s[1]}`\n    }\n    const dispatch = useAppDispatch();\n    useEffect(() => {\n        dispatch(loadInvoices({ searchValue: \"\", fromDate: getDate(dateRange[0]), toDate: getDate(dateRange[1]) }))\n    }, [dispatch, dateRange])\n    const { t } = useLocales()\n    const cards = [\n        { titel: t('allInvoice'), value: getCardCount(MasterData, 'Payment_Status', ''), icon: <Invoice />, action: cardFilter(\"Payment_Status\", \"\") },\n        { titel: t('overdue'), value: getCardCount(MasterData, 'Payment_Status', 'overdue'), icon: <Overdue />, action: cardFilter(\"Payment_Status\", \"overdue\") },\n        { titel: t('unpaidInvoices'), value: getCardCount(MasterData, 'Payment_Status', 'pending'), icon: <UnpaidInvoice />, action: cardFilter(\"Payment_Status\", \"pending\") },\n        { titel: t('paidInvoices'), value: getCardCount(MasterData, 'Payment_Status', 'completed'), icon: <PaidInvoice />, action: cardFilter(\"Payment_Status\", \"completed\") },\n    ]\n\n    const [showIt, setShowIt] = useState(false);\n    const handleShow = () => {\n        setShowIt(!showIt);\n    };\n\n    const firstElement = document.getElementById(\n        'first'\n    )\n    const secondElement = document.getElementById(\n        'second'\n    )\n    const thirdElement = document.getElementById(\n        'third'\n    )\n    const forthElement = document.getElementById(\n        'fourth'\n    )\n    const mainElement = document.getElementById(\n        'main-div'\n    )\n\n    // console.log(cards[0])\n    // cards.map((q: any, i: any) => console.log(q))\n    // console.log(mainElement?.firstChild?.firstChild)\n\n    //     const nodes = document.getElementById('main-div')?.childNodes;\n    // for(let i=0; i<4; i++) {\n    //     if(nodes){\n    //     if (nodes[i].nodeName.toLowerCase() == 'div') {\n    //          nodes[i]. = 'red';\n    //      }\n    //     }\n    // }\n\n    const btnContainer = document.getElementById(\"main-div\");\n\n    // Get all buttons with class=\"btn\" inside the container\n    if (btnContainer) {\n        const btns = btnContainer.getElementsByClassName(\"cardType__1\");\n        if (btns !== undefined) {\n            for (let i = 0; i < btns.length; i++) {\n                btns[i].addEventListener(\"click\", function () {\n                    const current = document.getElementsByClassName(\"active\");\n                    current[0].classList.remove('active')\n                    btns[i].classList.add('active')\n                    //     $('.blue').removeClass('red')\n                    // $(this).addClass('red');\n                    //     current[0].className = current[0].className.replace(\" active\", \"\");\n                    //     btns[i].className = \"cardType__1 active\";\n                });\n            }\n        }\n    }\n    // Loop through the buttons and add the active class to the current/clicked button\n\n    // if(btns !== undefined){\n    // // Loop through the buttons and add the active class to the current/clicked button\n    // for (let i = 0; i < btns.length; i++) {\n    //     btns[i].addEventListener(\"click\", function() {\n    //       const current = document.getElementsByClassName(\"active\");\n\n    //       // If there's no active class\n    //       if (current.length > 0) {\n    //         current[0].className = current[0].className.replace(\" active\", \"\");\n    //       }\n\n    //       // Add the active class to the current/clicked button\n    //       btns[i].className += \" active\";\n    //     });\n    //   }\n    // }\n\n    return (\n        <div >\n            <RaiseTicket handleShow={handleShow} showIt={showIt} />\n            <div className=\"dashboard__content\" style={{\n                // width: `${window.innerWidth - +`${dashBoardWidth}`.split('p')[0]}px`,\n                marginLeft: `${dashBoardWidth}`, width: `calc(100% - ${dashBoardWidth}.split('p')[0]}px`\n            }}>\n                <div className=\"content__header\">\n                    <BreadCrums data={breadCrums.BILLING} />\n                    <PageSearch searchFn={searchData} searchPlaceholder='searchInvoiceNoEntity' />\n                </div>\n                <div id=\"main-div\" className=\"card-wrapper-1\">\n                    {cards.map((q: any, i: any) => <Card data={q} key={i} />)}\n                </div >\n                <DataTable\n                    handledownloadViewpdf={viewBillingInvoice}\n                    handledownloadPdf={downloadBillingInvoice}\n                    handledownloadCdrPdf={downloadBillingInvoiceCDR}\n                    handleShow={handleShow}\n                    pageAction={ChangePageBilling}\n                    sortAction={sortData}\n                    filterAction={filterData}\n                    clearFilterClm={removeCLmFilter}\n                    filterValues={filterValue}\n                    ClmSearch={ClmSearch}\n                    Total={total}\n                    page={page}\n                    take={take}\n                    setDateRange={setDateRange}\n                    dateRange={dateRange}\n                    clearAllfilter={clearAllfilter}\n                    TableData={dataTables.BILLING(PageData, MasterData)} />\n            </div>\n            {/* <ModalTicketError /> */}\n        </div>\n    )\n}\n\nexport default Billing\n"],"names":["id","xmlns","type","typeVar","width","height","viewBox","fill","clipPath","d","transform","stroke","strokeWidth","DateSelect","dateRange","setDateRange","getDate","s","Date","toDateString","split","e","calOpen","useSelector","state","billing","dispatch","useDispatch","LocalizationProvider","dateAdapter","DateFnsUtils","onOpen","open","startText","endText","value","onChange","date","updateCal","dateChangeFn","renderInput","startProps","endProps","style","position","onClick","className","CalendarMonth","Close","Actions","data","pagination","changeTake","t","useLocales","useState","loading","setLoading","completed","setCompleted","dataStored","setDataStored","useEffect","document","getElementById","take","billingKeys","downloadDetails","setTimeout","ExportToCsv","filename","name","target","Total","CSVLink","asyncOnClick","cx","cy","r","opacity","strokeLinecap","strokeLinejoin","i","DownloadCdr","item","setErrorinDownload","useAppDispatch","React","anchorEl","setAnchorEl","Boolean","handleClose","handleDownload","downloadBillingInvoice","Tooltip","title","IconButton","event","currentTarget","size","sx","ml","undefined","Menu","onClose","PaperProps","elevation","overflow","filter","mt","mr","content","display","top","right","bgcolor","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","Divider","downloadBillingInvoiceCDR","CDRError","newState","setState","buttons","Button","action","color","fontSize","Stack","spacing","maxWidth","Snackbar","autoHideDuration","message","ErrorOutline","CDRDownloading","RotateRight","CDRDownloaded","CheckCircle","StyledTableCell","styled","TableCell","theme","tableCellClasses","backgroundColor","palette","common","black","white","TableData","sortAction","clearFilterClm","pageAction","filterAction","ClmSearch","page","clearAllfilter","handleShow","handledownloadPdf","handledownloadCdrPdf","handledownloadViewpdf","filterValues","columns","tableName","allMasterData","totalCount","Math","ceil","errorinDownload","styleOnHover","styleOnNotHover","useHover","borderColor","userSelect","updateData","setUlrParms","isHover","setIsHover","handleMouseEnter","handleMouseLeave","boxStyle","pendingStyle","completedStyle","noStyle","setTableData","downloadCompleteShowing","columnsDropdown","setColumnsDropdown","drops","setdrops","hiddenClms","SetHiddentClmns","changeActive","indexOf","console","log","m","splice","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","menuButton","MenuButton","MoreVert","transition","onDragOver","ev","preventDefault","onDrop","JSON","parse","dataTransfer","getData","draggedPosition","col","val","ind","parseInt","map","index","draggable","onDragStart","setData","stringify","drag","eleName","ListItemIcon","DragIndicator","includes","CheckBoxOutlineBlank","CheckBox","headTrans","head","align","sort","search","p","g","element","length","values","filterData","f","checked","startIcon","UnfoldMore","MenuListProps","onInput","placeholder","w","htmlFor","ArrowUpwardRounded","ArrowDownwardRounded","TableBody","icon","onMouseEnter","onMouseLeave","scope","href","clm","handleViewPdf","marginTop","Pagination","da","pageNumber","count","variant","shape","Billing","toggleTheme","PageData","MasterData","total","filterValue","dashBoardWidth","toLocaleDateString","loadInvoices","searchValue","fromDate","toDate","cards","titel","getCardCount","cardFilter","showIt","setShowIt","btnContainer","btns","getElementsByClassName","addEventListener","classList","remove","add","RaiseTicket","marginLeft","BreadCrum","breadCrums","PageSearch","searchFn","searchData","searchPlaceholder","q","viewBillingInvoice","ChangePageBilling","sortData","removeCLmFilter","dataTables"],"sourceRoot":""}
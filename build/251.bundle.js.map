{"version":3,"file":"251.bundle.js","mappings":"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","sources":["webpack://tclcpasstwentyfirstoct/./node_modules/@mui/material/esm/IconButton/iconButtonClasses.js","webpack://tclcpasstwentyfirstoct/./node_modules/@mui/material/esm/IconButton/IconButton.js","webpack://tclcpasstwentyfirstoct/./src/components/set-password/SetPassword.tsx","webpack://tclcpasstwentyfirstoct/./src/utils/Base64EncodeDecode.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => {\n  var _palette;\n  const palette = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];\n  return _extends({}, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n    color: palette == null ? void 0 : palette.main\n  }, !ownerState.disableRipple && {\n    '&:hover': _extends({}, palette && {\n      backgroundColor: theme.vars ? `rgba(${palette.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(palette.main, theme.palette.action.hoverOpacity)\n    }, {\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    })\n  }), ownerState.size === 'small' && {\n    padding: 5,\n    fontSize: theme.typography.pxToRem(18)\n  }, ownerState.size === 'large' && {\n    padding: 12,\n    fontSize: theme.typography.pxToRem(28)\n  }, {\n    [`&.${iconButtonClasses.disabled}`]: {\n      backgroundColor: 'transparent',\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  });\n});\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n      edge = false,\n      children,\n      className,\n      color = 'default',\n      disabled = false,\n      disableFocusRipple = false,\n      size = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;","import { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { resetPassword } from '../../redux/slices/authSlice'\nimport { Password } from '../../types/authType'\nimport {\n    useDispatch as useAppDispatch,\n    useSelector as useAppSelector,\n} from '../../redux/store'\n\nimport {\n    Box,\n    styled,\n    Button,\n    ButtonProps,\n    FormGroup,\n    FormControl,\n    Typography\n} from '@mui/material'\nimport { purple } from '@mui/material/colors'\nimport useLocales from '../../hooks/useLocales'\nimport { apiVrbls, appRoutes, typeVar } from '../../utils/constants'\nimport { base64Encode } from '../../utils/Base64EncodeDecode'\nimport { useNavigate } from 'react-router-dom'\nimport { PrimaryInput } from '../common/elements/PrimaryInput'\nimport { setPasswordSchema } from '../../utils/yupschemas'\nimport { FormProvider, RHFTextField } from '../hook-form'\n\nconst ColorButton = styled(Button)<ButtonProps>(({ theme }) => ({\n    color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: purple[500],\n    height: '70px',\n    width: '100%',\n    borderRadius: '35px',\n    mixBlendMode: 'luminosity',\n    opacity: 0.5,\n    '&:hover': {\n        backgroundColor: purple[700],\n    },\n}))\n\ninterface State {\n    amount: string\n    password: string\n    weight: string\n    weightRange: string\n    showPassword: boolean\n}\n\nconst SetPassword = () => {\n    const navigate = useNavigate()\n    const [passval, setPassVal] = useState('');\n    const [cnfPass, setcnfPass] = useState('');\n    const { isError, isSuccess, message, user, resetmessage } = useAppSelector(\n        (state: any) => state.auth || {}\n    )\n    const dispatch = useAppDispatch()\n    const { t } = useLocales()\n\n    if (resetmessage === \"SUCCESS\") {\n        navigate(appRoutes.WELCOME)\n    }\n    const { register, handleSubmit, formState, control, getValues } = useForm<any>({\n        mode: \"onChange\",\n        resolver: yupResolver(setPasswordSchema),\n    });\n    const setPass = (d: any) => {\n        try {\n            const userPassword: Password = {\n                newPassword: base64Encode(d.newPass),\n                username: user[apiVrbls.USER.EMAIL_ID]\n            }\n            dispatch(resetPassword(userPassword))\n\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return (\n        <>\n            <Box\n                sx={{ flexGrow: 1 }}\n                id=\"login-form\"\n                className=\"account__form login-form\"\n            >\n                <div className=\"form__inner\">\n                    <Box sx={{ width: 1 }} className=\"account__form__header\">\n                        <h3 className=\"title\">{t<string>('setPassword')}</h3>\n                        <Typography\n                            className=\"helper__title\"\n                            variant=\"body1\"\n                            sx={{\n                                textAlign: 'center',\n                                fontFamily: 'ubuntu',\n                                letterSpacing: 0,\n                                opacity: 0.6,\n                            }}\n                        >\n                            {t<string>('generatePassword')}\n                        </Typography>\n                    </Box>\n                    <Box sx={{ width: 1 }} className=\"account__form__error\">\n                        <p className=\"error__msg\">{message && message}</p>\n                    </Box>\n                    <Box sx={{ flexGrow: 1 }} className=\"account__form__body\">\n                        <FormProvider onSubmit={handleSubmit((d) => setPass(d))}>\n                            <FormGroup>\n                                <PrimaryInput\n                                    register={{ ...register('newPass') }}\n                                    label={'password'}\n                                    classNameInput={\"input-field\"}\n                                    fieldName={'newPass'}\n                                    formState={formState}\n                                    typeName={'password'}\n                                    onInput={setPassVal}\n                                    setpassword={true}\n                                    variantForInput={\"standard\"}\n                                    sxForInput={{ width: 1, borderRadius: '10px !important', border: 'none !important' }}\n                                    dataTestId='password-element'\n                                />\n                                <PrimaryInput\n                                    register={{ ...register('cnfPassword') }}\n                                    label={'confirmPassword'}\n                                    classNameInput={\"input-field\"}\n                                    fieldName={'cnfPassword'}\n                                    formState={formState}\n                                    typeName={'password'}\n                                    onInput={setcnfPass}\n                                    variantForInput={\"standard\"}\n                                    sxForInput={{ width: 1, borderRadius: '10px !important', border: 'none !important' }}\n                                    dataTestId='confirm-password-element'\n                                />\n                                <div style={{ position: 'relative', minHeight: '15px' }}>\n                                    {!formState.errors.newPass && !formState.errors.cnfPassword && passval != '' &&\n                                        <p className={passval !== cnfPass ? 'CnfPass error' : 'CnfPass success'}>\n                                            {passval !== cnfPass ? `${t<string>('bothPasswordMustMatch')}` : `${t<string>('paswordsMatched')}`}\n                                        </p>\n                                    }\n                                </div>\n                                <FormControl\n                                    className=\"input-wrapper submitBtn\"\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'flex-end',\n                                        position: 'relative',\n                                        width: 1,\n                                        marginTop: '50px',\n                                    }}\n                                >\n                                    <ColorButton\n                                        variant=\"contained\"\n                                        id=\"btn-enable-style\"\n                                        data-testid=\"button-element\"\n                                        type=\"submit\"\n                                        name=\"submit\"\n                                        sx={{\n                                            fontSize: '18px',\n                                            lineHeight: '21px',\n                                            fontFamily: 'ubuntu',\n                                            letterSpacing: '-0.72px',\n                                        }}\n                                        className={`customBtn-01 ${((passval != \"\") && (passval == cnfPass) && !formState.errors.newPass) ? 'btn-enable-style' : 'no-pointers'} `} >\n                                        {t<string>('done')}\n                                    </ColorButton>\n                                </FormControl>\n                            </FormGroup>\n                        </FormProvider>\n                    </Box>\n                </div>\n            </Box>\n        </>\n    )\n}\n\nexport default SetPassword\n","import { Buffer } from 'buffer'\n\nexport function base64Encode(str: string): string {\n  return Buffer.from(str).toString('base64')\n}\n\nexport function base64Decode(str: string): string {\n  return Buffer.from(str, 'base64').toString()\n}\n"],"names":["getIconButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","color","capitalize","edge","size","theme","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","vars","palette","action","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","activeChannel","hoverOpacity","marginLeft","marginRight","_palette","main","mainChannel","disabled","inProps","ref","useThemeProps","children","className","disableFocusRipple","other","classes","slots","composeClasses","useUtilityClasses","centerRipple","focusRipple","ColorButton","Button","getContrastText","purple","height","width","mixBlendMode","opacity","navigate","useNavigate","useState","passval","setPassVal","cnfPass","setcnfPass","useAppSelector","state","auth","message","isError","isSuccess","user","resetmessage","dispatch","useAppDispatch","t","useLocales","appRoutes","useForm","mode","resolver","yupResolver","setPasswordSchema","register","handleSubmit","formState","control","getValues","sx","flexGrow","id","variant","fontFamily","letterSpacing","onSubmit","d","userPassword","newPassword","base64Encode","newPass","username","apiVrbls","resetPassword","error","console","setPass","label","classNameInput","fieldName","typeName","onInput","setpassword","variantForInput","sxForInput","border","dataTestId","style","position","minHeight","errors","cnfPassword","display","alignItems","marginTop","type","lineHeight","str","Buffer","toString"],"sourceRoot":""}
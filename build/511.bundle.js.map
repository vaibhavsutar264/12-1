{"version":3,"file":"511.bundle.js","mappings":"4QAEO,SAASA,EAA6BC,GAC3C,OAAO,EAAAC,EAAA,GAAqB,mBAAoBD,EAClD,EAC6B,EAAAE,EAAA,GAAuB,mBAAoB,CAAC,OAAQ,YACjF,I,WCJA,MAAMC,EAAY,CAAC,YAAa,kBAmB1BC,GAAoB,EAAAC,EAAA,IAAO,MAAO,CACtCC,KAAM,mBACNN,KAAM,OACNO,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,MAAOD,EAAWE,gBAAkBH,EAAOI,QAAQ,GAP5C,EASvB,EACDH,iBACI,OAAS,CACbI,QAAS,OACTC,WAAY,SACZC,QAAS,EACTC,eAAgB,WAChBC,KAAM,aACJR,EAAWE,gBAAkB,CAC/B,2BAA4B,CAC1BO,WAAY,OAkDhB,MA/CmC,cAAiB,SAAuBC,EAASC,GAClF,MAAMb,GAAQ,EAAAc,EAAA,GAAc,CAC1Bd,MAAOY,EACPd,KAAM,sBAEF,UACFiB,EAAS,eACTX,GAAiB,GACfJ,EACJgB,GAAQ,OAA8BhB,EAAOL,GACzCO,GAAa,OAAS,CAAC,EAAGF,EAAO,CACrCI,mBAEIa,EA7CkBf,KACxB,MAAM,QACJe,EAAO,eACPb,GACEF,EACEgB,EAAQ,CACZf,KAAM,CAAC,QAASC,GAAkB,YAEpC,OAAO,EAAAe,EAAA,GAAeD,EAAO3B,EAA8B0B,EAAQ,EAqCnDG,CAAkBlB,GAClC,OAAoB,SAAKN,GAAmB,OAAS,CACnDmB,WAAW,OAAKE,EAAQd,KAAMY,GAC9Bb,WAAYA,EACZW,IAAKA,GACJG,GACL,G,yQChBA,EA9BA,SAAsB,GAAe,IAAbK,EAAI,EAAJA,KACdC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,KACRC,GAAaC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OACxD,OACI,UAACC,EAAA,EAAM,CACHJ,WAAYA,EACZL,KAAMA,EACN,kBAAgB,0BAAyB,WAEzC,SAACU,EAAA,EAAU,CAACC,QAAS,WAAQV,EAASW,EAAAA,GAAAA,UAAqB,EAAE,UAAE,SAACC,EAAA,EAAgB,OAChF,gBAAKC,I,i9JAAmBC,IAAI,MAC5B,SAACC,EAAA,EAAW,CAACC,GAAG,0BAA0BC,UAAU,SAAQ,SACvD,sBAEL,SAACC,EAAA,EAAa,WACV,SAACC,EAAA,EAAiB,CAACF,UAAU,SAAQ,uEAIzC,SAACG,EAAA,EAAa,CAAC3B,UAAU,YAAW,UAChC,SAAC4B,EAAA,EAAM,CAAC5B,UAAU,YAAYiB,QAAS,WAAQV,EAASW,EAAAA,GAAAA,UAAqB,EAAE,mCAM/F,ECvCaW,EAAU,WAEnB,OADoBC,EAAAA,EAAAA,KAAY,SAACC,GAAU,OAAKA,EAAMC,IAAI,IAAlDC,SAEJ,gBAAKjC,UAAU,GAAE,UACb,SAAC,EAAY,CAACM,MAAM,KAGhC,EACA,G","sources":["webpack://tclcpasstwentyfirstoct/./node_modules/@mui/material/esm/DialogActions/dialogActionsClasses.js","webpack://tclcpasstwentyfirstoct/./node_modules/@mui/material/esm/DialogActions/DialogActions.js","webpack://tclcpasstwentyfirstoct/./src/components/modals/ModalWelcome.tsx","webpack://tclcpasstwentyfirstoct/./src/components/welcome/welcome.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n  const {\n      className,\n      disableSpacing = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { Dialog, IconButton } from '@mui/material';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\nimport { styled } from '@mui/system';\nimport EnhancedEncryptionIcon from '@mui/icons-material/EnhancedEncryption';\nimport WelcomeCPass from '../../assets/images/svg/welcome-cpass.svg'\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\nimport { useNavigate } from 'react-router-dom';\nimport { appRoutes } from '../../utils/constants';\n\nfunction ModalWelcome({ open }: any) {\n    const navigate = useNavigate()\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n    return (\n        <Dialog\n            fullScreen={fullScreen}\n            open={open}\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <IconButton onClick={() => { navigate(appRoutes.DASHBOARD) }} ><CloseRoundedIcon /></IconButton>\n            <img src={WelcomeCPass} alt=\"\" />\n            <DialogTitle id=\"responsive-dialog-title\" textAlign='center'>\n                {\"Welcome to CPass\"}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText textAlign='center'>\n                    Perfect! You have successfully activated your account.\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions className='buildfix3'>\n                <Button className='buildfix2' onClick={() => { navigate(appRoutes.DASHBOARD) }} >\n                    jump to dashboard\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default ModalWelcome;\n","import {\n    useSelector\n} from '../../redux/store'\nimport ModalWelcome from '../modals/ModalWelcome';\n\nexport const Welcome = () => {\n    const { isError } = useSelector((state: any) => state.auth);\n    return (\n        <div className=\"\">\n            <ModalWelcome open={true} />\n        </div>\n    )\n}\nexport default Welcome\n"],"names":["getDialogActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","display","alignItems","padding","justifyContent","flex","marginLeft","inProps","ref","useThemeProps","className","other","classes","slots","composeClasses","useUtilityClasses","open","navigate","useNavigate","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","IconButton","onClick","appRoutes","CloseRounded","src","alt","DialogTitle","id","textAlign","DialogContent","DialogContentText","DialogActions","Button","Welcome","useSelector","state","auth","isError"],"sourceRoot":""}